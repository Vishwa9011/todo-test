document.addEventListener('DOMContentLoaded', function() {
  const input = document.getElementById('new-task');
  const btn = document.getElementById('add-btn');
  const list = document.getElementById('task-list');
  const error = document.getElementById('error');

  function addTask() {
    error.textContent = "";
    const text = input.value.trim();
    if (!text) {
      error.textContent = "Enter a task- text!";
      return;
    }
    const item = document.createElement('li');
    item.className = "task-item";
    item.innerHTML = `<span>${text}</span> `
    + " <b class='delete-btn'>Delete</b>" + " <b><label><inbox type='checkbox'> Done</label></b>";

    item.querySelector('.input-box').id = 'check-' + text;
    // Delete button for item
    item.querySelector('.delete-btn').addEventListener('click', function() {
      list.removeChild(item);
    });
    // Mark as done
    item.querySelector('input-box').addEventListener('change', function() {
      if (this.value) {
        item.innerHTML = ``<span class='todone'>${text}</span> ` 
        + " <b class='delete-btn'>Delete</b>" + " <b><label><input type='checkbox'> Done</label></b>  ";
        this.removeEventListener(if);
      }
    });
    list.appendChild(item);
    input.value = "";
}

  btn.addEventListener("click", addTask);
});
